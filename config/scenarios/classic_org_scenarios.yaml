# Classic Organization Scenarios Configuration
# Release 3.0 - Weakness Injection System
# These scenarios demonstrate typical organizational failure modes

version: "3.0"
updated: "2025-09-26"

# Global scenario settings
global_settings:
  enabled: true
  default_duration: 3600  # 1 hour default scenario duration
  reset_delay: 300       # 5 minutes between scenario resets
  max_concurrent: 2      # Maximum concurrent scenarios
  logging_level: "INFO"
  dashboard_updates: true
  alert_thresholds:
    critical: 90    # >90% degradation triggers critical alerts
    high: 70       # >70% degradation triggers high alerts
    medium: 40     # >40% degradation triggers medium alerts

# Scenario definitions
scenarios:

  # Scenario 1: Late Triage - Email processing delays causing SLA violations
  late_triage:
    name: "Late Email Triage"
    description: "Simulate delayed email processing causing SLA violations and customer escalation"
    enabled: false
    category: "email_processing"
    priority: "high"

    configuration:
      # Processing delay settings
      delay_range:
        min_minutes: 15      # Minimum delay to inject
        max_minutes: 240     # Maximum delay (4 hours)
        escalation_threshold: 120  # Escalation after 2 hours

      # Affected email types
      target_emails:
        - "customer_inquiry"
        - "support_request"
        - "general_info"
        - "complaint"

      # SLA thresholds (normal response times)
      sla_targets:
        customer_inquiry: 60     # 1 hour normal SLA
        support_request: 30      # 30 min normal SLA
        general_info: 120        # 2 hours normal SLA
        complaint: 15            # 15 min normal SLA

      # Escalation behavior
      escalation:
        enabled: true
        customer_frustration_rate: 1.5  # 1.5x increase per hour delay
        complaint_generation: true
        media_attention_threshold: 180  # Media interest after 3 hours

    # Expected business impact
    impact_metrics:
      response_time_increase: "100-400%"
      customer_satisfaction_drop: "30-60%"
      reputation_damage: "moderate"
      revenue_risk: "low"

    # Success criteria for demonstration
    success_criteria:
      sla_violations: ">5 per hour"
      escalation_rate: ">25%"
      dashboard_alerts: ">3 critical"

  # Scenario 2: Missed Expedite - High-value opportunities lost to poor email processing
  missed_expedite:
    name: "Missed Expedite Opportunities"
    description: "Simulate missed high-profit expedite requests due to poor email routing"
    enabled: false
    category: "revenue_impact"
    priority: "critical"

    configuration:
      # Expedite detection patterns
      expedite_keywords:
        - "urgent"
        - "expedite"
        - "24h delivery"
        - "rush order"
        - "immediate"
        - "emergency"
        - "10x profit"
        - "premium delivery"

      # Opportunity value ranges
      opportunity_values:
        min_euro: 5000      # Minimum expedite value
        max_euro: 50000     # Maximum expedite value
        profit_multiplier: 10  # 10x normal profit for expedites

      # Miss rate configuration
      miss_rate: 0.75       # 75% of expedites are missed
      detection_delay: 180   # 3 hours average detection delay

      # Customer behavior
      customer_response:
        competitor_switch_rate: 0.4  # 40% go to competitors
        future_business_loss: 0.3    # 30% reduce future orders
        negative_reviews: 0.6        # 60% leave negative reviews

    impact_metrics:
      revenue_loss_per_incident: "€5,000-€50,000"
      profit_loss_multiplier: "10x"
      competitive_advantage_loss: "high"
      customer_retention_impact: "30%"

    success_criteria:
      missed_opportunities: ">3 per day"
      revenue_loss: ">€50,000 per incident"
      competitor_switches: ">2 customers"

  # Scenario 3: VIP Mishandling - Royal/premium customer requests ignored
  vip_handling:
    name: "VIP Customer Mishandling"
    description: "Simulate inadequate handling of VIP customer requests causing reputation damage"
    enabled: false
    category: "customer_relations"
    priority: "critical"

    configuration:
      # VIP customer identification
      vip_criteria:
        royal_blue_customers: true
        revenue_threshold: 100000  # €100K+ annual revenue
        strategic_accounts: true
        media_visibility: true

      # VIP keywords and indicators
      vip_indicators:
        - "royal household"
        - "blue ribbon"
        - "premium account"
        - "strategic partner"
        - "exclusive client"
        - "board member"
        - "major investor"

      # Mishandling behaviors
      mishandling_types:
        delayed_response: 0.6      # 60% get delayed responses
        wrong_department: 0.3      # 30% routed incorrectly
        automated_reply: 0.4       # 40% get generic responses
        no_escalation: 0.8         # 80% don't get escalated

      # Reputation impact modeling
      reputation_damage:
        social_media_risk: 0.7     # 70% chance of social media backlash
        media_coverage_risk: 0.3   # 30% chance of media attention
        industry_gossip: 0.9       # 90% chance of industry reputation damage
        relationship_damage: "severe"

    impact_metrics:
      reputation_score_drop: "50%"
      social_media_mentions: "+300%"
      media_coverage_risk: "high"
      relationship_damage: "severe"

    success_criteria:
      vip_incidents: ">2 per week"
      reputation_drop: ">50%"
      media_mentions: ">5 negative"

  # Scenario 4: Global Disruption - Supply chain disruptions affecting delivery
  global_disruption:
    name: "Global Supply Chain Disruption"
    description: "Simulate major global disruption (Suez Canal blockage) affecting supply chains"
    enabled: false
    category: "supply_chain"
    priority: "high"

    configuration:
      # Disruption scenarios
      disruption_types:
        suez_canal_blockage:
          enabled: true
          duration_days: 7
          affected_routes: ["asia_europe", "middle_east_europe"]
          delay_multiplier: 3.5

        port_strikes:
          enabled: false
          affected_ports: ["hamburg", "rotterdam", "felixstowe"]
          delay_multiplier: 2.0

        natural_disasters:
          enabled: false
          affected_regions: ["asia_pacific"]
          delay_multiplier: 4.0

      # Supply chain modeling
      supply_routes:
        primary_route: "asia_europe_suez"
        alternative_routes:
          - name: "asia_europe_cape"
            delay_days: 14
            cost_increase: 2.3
          - name: "overland_rail"
            delay_days: 21
            cost_increase: 1.8

      # Business impact calculation
      impact_calculation:
        affected_orders_percentage: 0.6  # 60% of orders affected
        delivery_delay_days: 14          # 14 days average delay
        cost_increase_percentage: 1.3    # 30% cost increase
        customer_satisfaction_impact: 0.4 # 40% satisfaction drop

    impact_metrics:
      delivery_delay: "+14 days average"
      cost_increase: "+30%"
      customer_satisfaction: "-40%"
      on_time_delivery: "90% → 60%"

    success_criteria:
      affected_orders: ">60%"
      delivery_delays: ">14 days average"
      cost_increases: ">30%"

# Scenario execution rules
execution_rules:

  # Activation conditions
  activation:
    require_confirmation: true    # Manual confirmation required
    staging_environment: false   # Can run in production
    business_hours_only: false   # Can run 24/7

  # Monitoring and alerts
  monitoring:
    real_time_updates: true
    alert_frequency: 300        # Alert every 5 minutes during scenarios
    dashboard_refresh: 30       # Dashboard updates every 30 seconds

  # Recovery and cleanup
  recovery:
    automatic_reset: true       # Automatically reset after duration
    manual_intervention: true   # Allow manual intervention
    data_preservation: true     # Keep scenario data for analysis

  # Safety measures
  safety:
    max_scenario_duration: 7200 # 2 hours maximum duration
    emergency_stop: true        # Emergency stop capability
    rollback_capability: true   # Can rollback changes
    impact_limits:
      max_reputation_damage: 60  # Maximum 60% reputation drop
      max_revenue_loss: 100000   # Maximum €100K revenue loss per scenario

# Integration settings
integration:

  # Dashboard integration
  dashboard:
    scenario_control_panel: true
    real_time_metrics: true
    impact_visualization: true
    comparison_charts: true

  # API endpoints
  api:
    scenario_control: "/api/v3/scenarios"
    scenario_status: "/api/v3/scenarios/status"
    scenario_metrics: "/api/v3/scenarios/metrics"
    scenario_history: "/api/v3/scenarios/history"

  # Logging and audit
  logging:
    scenario_events: true
    impact_tracking: true
    user_actions: true
    system_changes: true

  # External notifications
  notifications:
    email_alerts: true
    slack_integration: false
    webhook_support: true
    sms_alerts: false

# Performance and resource limits
performance:
  resource_limits:
    cpu_usage_max: 80          # Maximum 80% CPU usage
    memory_usage_max: 85       # Maximum 85% memory usage
    disk_io_max: 70            # Maximum 70% disk I/O

  optimization:
    caching_enabled: true
    database_optimization: true
    async_processing: true
    batch_operations: true

# Validation and testing
validation:
  schema_validation: true
  configuration_testing: true
  scenario_dry_run: true
  impact_simulation: true

# Documentation and help
documentation:
  scenario_descriptions: true
  user_guides: true
  troubleshooting: true
  best_practices: true